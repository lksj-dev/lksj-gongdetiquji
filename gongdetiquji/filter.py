import io
import re


def full_name_match(name: str):
    return lambda fname, _: name == fname

def prefix_match(prefix: str):
    return lambda fname, _: fname.startswith(prefix)

def suffix_match(suffix: str):
    return lambda fname, _: fname.endswith(suffix)

def regex_name_match(pattern: str):
    return lambda fname, _: re.fullmatch(pattern, fname) is not None

def all_pass(*args):
    return lambda fname, content: all([ filter(fname, content) for filter in args ])

def any_pass(*args):
    return lambda fname, content: any([ filter(fname, content) for filter in args ])

filters=[
    # Typical log file generated by Minecraft
    full_name_match('debug.log'),
    # Typical log file generated by Minecraft
    full_name_match('latest.log'),
    # JVM crash report
    prefix_match('hs_err'),
    # Minecraft crash report
    # Notably, if it is QuiltLoader that crashes, the file name will include sub-second part, up to 4 decimal points.
    # It is an implementation detail of QuiltLoader. See here for more details:
    # https://github.com/QuiltMC/quilt-loader/blob/71d96086fa6465f3f77d75ddc744d3911fb86dec/src/main/java/org/quiltmc/loader/impl/report/QuiltReport.java#L139
    # Other major loaders does not have this behavior.
    #               prefix -   year  -  month -  day   _  hour   .  minute . second   .subsecond   suffix
    regex_name_match('crash-[0-9]{4,}-[0-9]{2}-[0-9]{2}_[0-9]{2}\.[0-9]{2}\.[0-9]{2}(?:\.[0-9]{4})?-(.*).txt')
]

def allow(fname: str, content: bytes) -> bool:
    '''Return True if the specified file may be uploaded via this bot; False otherwise.'''
    return any([ filter(fname, content) for filter in filters ])